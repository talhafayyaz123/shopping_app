trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  phpVersion: 7.4

steps:
- script: |
    sudo a2dismod php*
    sudo a2enmod php$(phpVersion)
    sudo systemctl restart apache2
    sudo update-alternatives --set php /usr/bin/php$(phpVersion)
    sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
    sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
    sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
    sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
  displayName: 'Use PHP version $(phpVersion)'

- script: composer  install --ignore-platform-req=php --no-interaction --prefer-dist 
  displayName: 'composer'

- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install NodeJS'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '$(Build.SourcesDirectory)'
  displayName: 'npm install'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: '$(Build.SourcesDirectory)'
    customCommand: 'run build'
  displayName: 'npm build'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: |
      **/**
      !**/node_modules/**
      !**/.git/**
      !**/storage/**
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true
  displayName: 'Copy files to publish directory'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    StoreAsTar: true
